{"version":3,"sources":["components/join.js","components/snake.js","components/food.js","components/timer.js","components/snake_game.js","components/join_room.js","App.js","serviceWorker.js","index.js"],"names":["Join","props","handleName","e","setState","name","target","value","handleRoom","room","handleFormSubmit","state","preventDefault","joinRoom","form_submit","this","style","display","justifyContent","alignItems","height","id","width","backgroundColor","borderBlockColor","onSubmit","flexDirection","color","type","placeholder","onChange","className","marginTop","Component","Snake","snake_dots","map","dot","i","left","top","borderRadius","key","food","Timer","time_left","timer","setInterval","clearInterval","onGameOver","marginLeft","initialState","speed","hide_food","snake_1","direction","snake_2","App","moveSnake","requestAnimationFrame","dots_1","dots_2","head_1","length","head_2","push","shift","onKeyDown","snake","my_snake","window","event","keyCode","snake_game","emit","checkIfEatAnotherSnake","head","opponent_snake_dots","pop","forEach","checkIfHeadCollapse","is_snake_dead","message","highest_score","on","msg","alert","gameOver","document","onkeydown","checkIfOutOfBorders","checkIfCollapsed","checkIfEat","Math","floor","random","enlargeSnake","increaseSpeed","new_snake_dots","unshift","JoinRoom","user_detail","join_room","start_game","io","connect","res","console","log","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.615eb574.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class Join extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      room: \"\",\r\n      form_submit: false,\r\n    };\r\n  }\r\n  handleName = (e) => {\r\n    this.setState({ name: e.target.value });\r\n  };\r\n  handleRoom = (e) => {\r\n    this.setState({ room: e.target.value });\r\n  };\r\n\r\n  handleFormSubmit = (e) => {\r\n    const { name, room } = this.state;\r\n    e.preventDefault();\r\n    if (!!!name || !!!room) {\r\n      this.setState({ form_submit: true });\r\n      return;\r\n    }\r\n    this.props.joinRoom(name, room);\r\n  };\r\n  render() {\r\n    const { name, room, form_submit } = this.state;\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        <div\r\n          id=\"join\"\r\n          // className=\"login-wrapper\"\r\n          style={{\r\n            width: 400,\r\n            height: 250,\r\n            backgroundColor: \"#d9d9ff\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            borderBlockColor: \"#7373ff\",\r\n          }}\r\n        >\r\n          <form onSubmit={this.handleFormSubmit}>\r\n            <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n              <label>\r\n                Name <sup style={{ color: \"#ff0000\" }}>*</sup>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name}\r\n                placeholder=\"name\"\r\n                onChange={this.handleName}\r\n              />\r\n              {!!form_submit && !!!name && (\r\n                <span className=\"error-txt\" style={{ color: \"#ff0000\" }}>\r\n                  empty name!\r\n                </span>\r\n              )}\r\n            </div>\r\n            <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n              <label>\r\n                Room <sup style={{ color: \"#ff0000\" }}>*</sup>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"room\"\r\n                value={room}\r\n                placeholder=\"room\"\r\n                onChange={this.handleRoom}\r\n              />\r\n              {!!form_submit && !!!room && (\r\n                <span className=\"error-txt\" style={{ color: \"#ff0000\" }}>\r\n                  empty room!\r\n                </span>\r\n              )}\r\n            </div>\r\n            <button onSubmit={this.handleFormSubmit} style={{ marginTop: 15 }}>\r\n              Join\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Snake(props) {\r\n  return (\r\n    <div>\r\n      {props.snake_dots.map((dot, i) => {\r\n        const style = {\r\n          left: `${dot[0]}%`,\r\n          top: `${dot[1]}%`,\r\n          borderRadius: \"50%\",\r\n        };\r\n        return <div key={i} className=\"snake-dot\" style={style}></div>;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function food(props) {\r\n  const style = {\r\n    left: `${props.food[0]}%`,\r\n    top: `${props.food[1]}%`,\r\n    borderRadius: \"50%\",\r\n  };\r\n\r\n  return <div className=\"snake-food\" style={style}></div>;\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Timer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      time_left: 100,\r\n    };\r\n    this.timer = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timer = setInterval(() => {\r\n      this.setState({ time_left: this.state.time_left - 1 });\r\n      if (this.state.time_left === 0) {\r\n        clearInterval(this.timer);\r\n        this.props.onGameOver(false);\r\n      }\r\n    }, 1000);\r\n  }\r\n  render() {\r\n    const { time_left } = this.state;\r\n    return (\r\n      <h1\r\n        style={{ marginLeft: \"auto\", color: time_left < 10 ? \"red\" : \"green\" }}\r\n      >\r\n        Time Left:{time_left} sec\r\n      </h1>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Snake from \"./snake\";\r\nimport Food from \"./food\";\r\nimport Timer from \"./timer\";\r\nconst getRandomCoordinates = () => {\r\n  let min = 1;\r\n  let max = 98;\r\n  let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\r\n  let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\r\n  return [x, y];\r\n};\r\n\r\nconst initialState = {\r\n  food: [50, 50],\r\n  speed: 200,\r\n  hide_food: false,\r\n  // direction: \"RIGHT\",\r\n  // snakeDots: [\r\n  //   [0, 0],\r\n  //   [2, 0],\r\n  // ],\r\n  snake_1: {\r\n    direction: \"RIGHT\",\r\n    snake_dots: [\r\n      [0, 0],\r\n      [2, 0],\r\n    ],\r\n  },\r\n  snake_2: {\r\n    direction: \"RIGHT\",\r\n    snake_dots: [\r\n      [10, 10],\r\n      [12, 10],\r\n    ],\r\n  },\r\n};\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ...initialState,\r\n      highest_score: 0,\r\n      speed: props.speed || initialState.speed,\r\n    };\r\n    this.speed = props.speed || initialState.speed;\r\n    this.snake_game = this.props.snake_game;\r\n    this.snake_game.on(\"move_snake\", (state) => {\r\n      this.setState({ ...state });\r\n      // console.log(this.props.my_snake);\r\n    });\r\n    this.snake_game.on(\"eat_food\", (state) => {\r\n      this.setState({ ...state, hide_food: false });\r\n    });\r\n    this.snake_game.on(\"enlarge_snake\", (state) => {\r\n      this.setState({ ...state, hide_food: false });\r\n    });\r\n    this.snake_game.on(\"increase_game_speed\", (state) => {\r\n      this.setState({ ...state });\r\n    });\r\n    this.snake_game.on(\"game_over\", (msg) => {\r\n      alert(msg);\r\n      this.props.gameOver();\r\n    });\r\n  }\r\n  // state = initialState;\r\n\r\n  componentDidMount() {\r\n    setInterval(this.moveSnake, this.state.speed);\r\n    document.onkeydown = this.onKeyDown;\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.checkIfOutOfBorders();\r\n    this.checkIfCollapsed();\r\n    this.checkIfEat();\r\n    this.checkIfEatAnotherSnake();\r\n    this.checkIfHeadCollapse();\r\n  }\r\n\r\n  moveSnake = () => {\r\n    requestAnimationFrame(() => {\r\n      // let dots = [...this.state.snakeDots];\r\n      let snake_1 = this.state.snake_1;\r\n      let snake_2 = this.state.snake_2;\r\n      let dots_1 = [...snake_1.snake_dots];\r\n      let dots_2 = [...snake_2.snake_dots];\r\n      let head_1 = dots_1[dots_1.length - 1];\r\n      let head_2 = dots_2[dots_2.length - 1];\r\n\r\n      switch (snake_1.direction) {\r\n        case \"RIGHT\":\r\n          head_1 = [head_1[0] + 2, head_1[1]];\r\n          break;\r\n        case \"LEFT\":\r\n          head_1 = [head_1[0] - 2, head_1[1]];\r\n          break;\r\n        case \"DOWN\":\r\n          head_1 = [head_1[0], head_1[1] + 2];\r\n          break;\r\n        case \"UP\":\r\n          head_1 = [head_1[0], head_1[1] - 2];\r\n          break;\r\n      }\r\n\r\n      switch (snake_2.direction) {\r\n        case \"RIGHT\":\r\n          head_2 = [head_2[0] + 2, head_2[1]];\r\n          break;\r\n        case \"LEFT\":\r\n          head_2 = [head_2[0] - 2, head_2[1]];\r\n          break;\r\n        case \"DOWN\":\r\n          head_2 = [head_2[0], head_2[1] + 2];\r\n          break;\r\n        case \"UP\":\r\n          head_2 = [head_2[0], head_2[1] - 2];\r\n          break;\r\n      }\r\n\r\n      dots_1.push(head_1);\r\n      dots_2.push(head_2);\r\n      dots_1.shift();\r\n      dots_2.shift();\r\n\r\n      // let state = {\r\n      //   snake_1: {\r\n      //     ...snake_1,\r\n      //     snake_dots: dots_1,\r\n      //   },\r\n      //   snake_2: {\r\n      //     ...snake_2,\r\n      //     snake_dots: dots_2,\r\n      //   },\r\n      // };\r\n\r\n      // this.snake_game.emit(\"move_snake\", { state, room: this.props.room });\r\n\r\n      this.setState({\r\n        snake_1: {\r\n          ...snake_1,\r\n          snake_dots: dots_1,\r\n        },\r\n        snake_2: {\r\n          ...snake_2,\r\n          snake_dots: dots_2,\r\n        },\r\n      });\r\n    });\r\n  };\r\n\r\n  onKeyDown = (e) => {\r\n    // const { direction } = this.state;\r\n    let snake = this.state[this.props.my_snake];\r\n    let direction = snake.direction;\r\n    e = e || window.event;\r\n    let state = {};\r\n    switch (e.keyCode) {\r\n      case 40:\r\n        if (direction != \"UP\")\r\n          state = { [this.props.my_snake]: { ...snake, direction: \"DOWN\" } };\r\n        break;\r\n      case 38:\r\n        if (direction != \"DOWN\")\r\n          state = { [this.props.my_snake]: { ...snake, direction: \"UP\" } };\r\n        break;\r\n      case 39:\r\n        if (direction != \"LEFT\")\r\n          state = { [this.props.my_snake]: { ...snake, direction: \"RIGHT\" } };\r\n        break;\r\n      case 37:\r\n        if (direction != \"RIGHT\")\r\n          state = { [this.props.my_snake]: { ...snake, direction: \"LEFT\" } };\r\n        break;\r\n    }\r\n\r\n    this.snake_game.emit(\"move_snake\", { state, room: this.props.room });\r\n  };\r\n\r\n  checkIfOutOfBorders() {\r\n    let snake = this.state[this.props.my_snake];\r\n    let head = snake.snake_dots[snake.snake_dots.length - 1];\r\n    if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0) {\r\n      this.onGameOver(true);\r\n    }\r\n  }\r\n\r\n  checkIfEatAnotherSnake = () => {\r\n    let snake = this.state[this.props.my_snake];\r\n    let head = snake.snake_dots[snake.snake_dots.length - 1];\r\n    let opponent_snake_dots = [];\r\n    if (this.props.my_snake === \"snake_1\") {\r\n      opponent_snake_dots = [...this.state.snake_2.snake_dots];\r\n    } else {\r\n      opponent_snake_dots = [...this.state.snake_1.snake_dots];\r\n    }\r\n\r\n    opponent_snake_dots.pop();\r\n    opponent_snake_dots.forEach((dot) => {\r\n      if (head[0] == dot[0] && head[1] == dot[1]) {\r\n        this.onGameOver(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  checkIfHeadCollapse = () => {\r\n    let head_1 = [\r\n      ...this.state.snake_1.snake_dots[\r\n        this.state.snake_1.snake_dots.length - 1\r\n      ],\r\n    ];\r\n\r\n    let head_2 = [\r\n      ...this.state.snake_2.snake_dots[\r\n        this.state.snake_2.snake_dots.length - 1\r\n      ],\r\n    ];\r\n\r\n    if (head_1[0] == head_2[0] && head_1[1] == head_2[1]) {\r\n      this.onGameOver(false);\r\n    }\r\n  };\r\n\r\n  checkIfCollapsed() {\r\n    // let snake = [...this.state.snakeDots];\r\n\r\n    let snake_dots = [...this.state[this.props.my_snake].snake_dots];\r\n    let head = snake_dots[snake_dots.length - 1];\r\n    snake_dots.pop();\r\n    snake_dots.forEach((dot) => {\r\n      if (head[0] == dot[0] && head[1] == dot[1]) {\r\n        this.onGameOver(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  checkIfEat() {\r\n    let snake = this.state[this.props.my_snake];\r\n\r\n    let head = snake.snake_dots[snake.snake_dots.length - 1];\r\n    let food = this.state.food;\r\n    if (head[0] == food[0] && head[1] == food[1]) {\r\n      ///eat food logic\r\n      this.setState({ hide_food: true, food: [0, 0] });\r\n      this.snake_game.emit(\"eat_food\", {\r\n        state: { food: getRandomCoordinates() },\r\n        room: this.props.room,\r\n      });\r\n\r\n      // this.setState({\r\n      //   food: getRandomCoordinates(),\r\n      // });\r\n      this.enlargeSnake();\r\n      this.increaseSpeed();\r\n    }\r\n  }\r\n\r\n  enlargeSnake() {\r\n    let snake = this.state[this.props.my_snake];\r\n    let new_snake_dots = [...snake.snake_dots];\r\n    new_snake_dots.unshift([]);\r\n    new_snake_dots.unshift([]);\r\n    new_snake_dots.unshift([]);\r\n    new_snake_dots.unshift([]);\r\n    new_snake_dots.unshift([]);\r\n\r\n    this.snake_game.emit(\"enlarge_snake\", {\r\n      state: {\r\n        [this.props.my_snake]: { ...snake, snake_dots: new_snake_dots },\r\n      },\r\n      room: this.props.room,\r\n    });\r\n    // this.setState({\r\n    //   [this.props.my_snake]: { ...snake, snake_dots: new_snake_dots },\r\n    // });\r\n  }\r\n\r\n  increaseSpeed() {\r\n    if (this.state.speed > 10) {\r\n      this.snake_game.emit(\"increase_game_speed\", {\r\n        state: { speed: this.state.speed - 10 },\r\n        room: this.props.room,\r\n      });\r\n\r\n      // this.setState({\r\n      //   speed: this.state.speed - 10,\r\n      // });\r\n    }\r\n  }\r\n\r\n  onGameOver = (is_snake_dead) => {\r\n    let opponent_player = \"\";\r\n    let message = \"\";\r\n\r\n    if (this.props.my_snake === \"snake_1\") {\r\n      opponent_player = this.props.snake_2;\r\n    } else {\r\n      opponent_player = this.props.snake_1;\r\n    }\r\n    message =\r\n      opponent_player +\r\n      \"won as \" +\r\n      this.props[this.props.my_snake] +\r\n      \"'s snake dead\";\r\n\r\n    if (is_snake_dead) {\r\n      this.snake_game.emit(\"game_over\", {\r\n        message,\r\n        room: this.props.room,\r\n      });\r\n    } else {\r\n      if (\r\n        this.state.snake_1.snake_dots.length >\r\n        this.state.snake_2.snake_dots.length\r\n      ) {\r\n        message =\r\n          this.props.snake_1 +\r\n          \" won by\" +\r\n          (this.state.snake_1.snake_dots.length -\r\n            this.state.snake_2.snake_dots.length) +\r\n          \" points\";\r\n      } else if (\r\n        this.state.snake_1.snake_dots.length <\r\n        this.state.snake_2.snake_dots.length\r\n      ) {\r\n        message =\r\n          this.props.snake_2 +\r\n          \" won by\" +\r\n          (this.state.snake_2.snake_dots.length -\r\n            this.state.snake_1.snake_dots.length) +\r\n          \" points\";\r\n      } else {\r\n        message = \"Match Draw\";\r\n      }\r\n      this.snake_game.emit(\"game_over\", {\r\n        message,\r\n        room: this.props.room,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div style={{ display: \"flex\" }}>\r\n          <h1>\r\n            {this.props.snake_1}:\r\n            {this.state.snake_1.snake_dots.length -\r\n              initialState.snake_1.snake_dots.length}\r\n          </h1>\r\n          <Timer onGameOver={this.onGameOver} />\r\n          <h1 style={{ marginLeft: \"auto\" }}>\r\n            {this.props.snake_2}:\r\n            {this.state.snake_2.snake_dots.length -\r\n              initialState.snake_2.snake_dots.length}\r\n          </h1>\r\n        </div>\r\n\r\n        <div className=\"game-area\">\r\n          <Snake snake_dots={this.state.snake_1.snake_dots} />\r\n          <Snake snake_dots={this.state.snake_2.snake_dots} />\r\n          {!this.state.hide_food && <Food food={this.state.food} />}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class JoinRoom extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        <p>\r\n          You have successfully joined this room, please wait for another player\r\n          to start\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Join from \"./components/join\";\r\nimport SnakeGame from \"./components/snake_game\";\r\nimport JoinRoom from \"./components/join_room\";\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      join_room: false,\r\n      user_detail: {\r\n        name: \"\",\r\n        room: \"\",\r\n      },\r\n      start_game: false,\r\n      my_snake: null,\r\n      snake_1: \"\",\r\n      snake_2: \"\",\r\n    };\r\n    this.snake_game = io.connect(\r\n      \"https://node-snake-game-server-new.herokuapp.com/games\"\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.snake_game.on(\"room_is_full\", (res) => {\r\n      alert(res);\r\n    });\r\n    this.snake_game.on(\"joined_room\", (my_snake) => {\r\n      this.setState({ my_snake });\r\n      console.log(my_snake);\r\n    });\r\n    this.snake_game.on(\"start_game\", (res) => {\r\n      this.setState({ start_game: true, ...res });\r\n    });\r\n  }\r\n\r\n  joinRoom = (name, room) => {\r\n    this.setState({ user_detail: { name, room }, join_room: true });\r\n    this.snake_game.emit(\"request_to_join_room\", { room, name });\r\n  };\r\n\r\n  gameOver = () => {\r\n    this.setState({\r\n      join_room: false,\r\n      user_detail: {\r\n        name: \"\",\r\n        room: \"\",\r\n      },\r\n      start_game: false,\r\n      my_snake: null,\r\n      snake_1: \"\",\r\n      snake_2: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      join_room,\r\n      user_detail,\r\n      start_game,\r\n      my_snake,\r\n      snake_1,\r\n      snake_2,\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        {!start_game && !join_room && (\r\n          <Join joinRoom={this.joinRoom} {...user_detail} />\r\n        )}\r\n        {!start_game && join_room && <JoinRoom />}\r\n        {start_game && join_room && (\r\n          <SnakeGame\r\n            {...user_detail}\r\n            my_snake={my_snake}\r\n            snake_game={this.snake_game}\r\n            {...{ snake_1, snake_2 }}\r\n            gameOver={this.gameOver}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}